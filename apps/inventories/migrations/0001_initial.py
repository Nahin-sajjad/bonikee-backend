# Generated by Django 4.2.1 on 2023-09-21 12:34

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Adjust",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("edited_at", models.DateTimeField(auto_now=True)),
                (
                    "adjust_type_cd",
                    models.CharField(
                        choices=[(1, "Increament"), (2, "Decreament")], max_length=100
                    ),
                ),
                ("adjust_dt", models.DateField(auto_now=True)),
                ("adjust_qty", models.FloatField(default=0)),
                ("reason_cd", models.SmallIntegerField(default=0)),
                ("reason", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "INV_Adjust",
            },
        ),
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("edited_at", models.DateTimeField(auto_now=True)),
                ("brand_name", models.CharField(max_length=250)),
                ("short_name", models.CharField(blank=True, max_length=10, null=True)),
                ("brand_code", models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                "db_table": "INV_Brand",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("edited_at", models.DateTimeField(auto_now=True)),
                ("category_name", models.CharField(max_length=250)),
                ("descr", models.TextField(blank=True, null=True)),
                ("category_code", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "INV_Category",
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("edited_at", models.DateTimeField(auto_now=True)),
                ("item_title", models.CharField(max_length=250)),
                ("manufac", models.CharField(blank=True, max_length=250, null=True)),
                ("item_image", models.ImageField(blank=True, null=True, upload_to="")),
                ("sku", models.TextField(blank=True, null=True)),
                ("threshold_qty", models.FloatField(default=0)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "item_type_code",
                    models.CharField(
                        blank=True,
                        choices=[("1", "Raw Material"), ("2", "Finished")],
                        max_length=250,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "INV_Item",
            },
        ),
        migrations.CreateModel(
            name="ItemAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("edited_at", models.DateTimeField(auto_now=True)),
                ("attribute_name", models.CharField(max_length=264)),
                (
                    "attribute_option",
                    models.CharField(
                        choices=[("1", "Select"), ("2", "Type")], max_length=128
                    ),
                ),
            ],
            options={
                "db_table": "INV_Item_Attribute",
            },
        ),
        migrations.CreateModel(
            name="ItemAttributeValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("edited_at", models.DateTimeField(auto_now=True)),
                (
                    "attribute_value",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=128), size=None
                    ),
                ),
            ],
            options={
                "db_table": "INV_Item_Attribute_Value",
            },
        ),
        migrations.CreateModel(
            name="ItemLineAtribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("edited_at", models.DateTimeField(auto_now=True)),
                (
                    "option_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("attributes", models.JSONField(blank=True, default=dict, null=True)),
            ],
            options={
                "db_table": "INV_ItemLineAtribute",
            },
        ),
        migrations.CreateModel(
            name="Production",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("edited_at", models.DateTimeField(auto_now=True)),
                (
                    "production_identity",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("exp_date", models.DateField(blank=True, null=True)),
                ("recvd_date", models.DateField(blank=True, null=True)),
                ("recvd_qty", models.FloatField(default=0)),
                ("per_pack_qty", models.FloatField(default=0)),
                ("cost_per_unit", models.FloatField(default=0)),
                ("lot_number", models.CharField(blank=True, max_length=20, null=True)),
                ("sku", models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                "db_table": "INV_Production",
                "ordering": ("-id",),
            },
        ),
        migrations.CreateModel(
            name="Stock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("edited_at", models.DateTimeField(auto_now=True)),
                (
                    "stock_identity",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("lot_number", models.CharField(blank=True, max_length=20, null=True)),
                ("exp_date", models.DateField(blank=True, null=True)),
                ("last_recvd_date", models.DateTimeField(blank=True, null=True)),
                ("per_pack_qty", models.FloatField(default=0)),
                ("non_pack_qty", models.FloatField(default=0)),
                ("quantity", models.FloatField(default=0)),
            ],
            options={
                "db_table": "INV_Stock",
            },
        ),
        migrations.CreateModel(
            name="StockPrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("edited_at", models.DateTimeField(auto_now=True)),
                ("markup", models.FloatField(default=0)),
                ("mark_down", models.FloatField(default=0)),
                ("sales_price", models.FloatField(default=0)),
                ("min_price", models.FloatField(default=0)),
            ],
            options={
                "db_table": "INV_Stock_Price",
            },
        ),
        migrations.CreateModel(
            name="Transfer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("edited_at", models.DateTimeField(auto_now=True)),
                ("transfer_no", models.IntegerField(default=0)),
                ("trans_dt", models.DateField(auto_now=True)),
                (
                    "purpose_cd",
                    models.SmallIntegerField(
                        blank=True, choices=[(1, "Production"), (2, "Sale")], null=True
                    ),
                ),
            ],
            options={
                "db_table": "INV_Transfer",
            },
        ),
        migrations.CreateModel(
            name="TransferItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("edited_at", models.DateTimeField(auto_now=True)),
                ("trans_qty", models.IntegerField(default=0)),
                (
                    "des_stock_identity",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={
                "db_table": "INV_Transfer_Item",
            },
        ),
        migrations.CreateModel(
            name="UOM",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("edited_at", models.DateTimeField(auto_now=True)),
                ("uom_name", models.CharField(max_length=250)),
                (
                    "uom_type_cd",
                    models.CharField(
                        blank=True,
                        choices=[("1", "Length"), ("2", "Weight"), ("3", "Volume")],
                        max_length=250,
                        null=True,
                    ),
                ),
                ("is_pack_unit", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "INV_UOM",
            },
        ),
        migrations.CreateModel(
            name="Warehouse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("edited_at", models.DateTimeField(auto_now=True)),
                ("warehouse_name", models.CharField(max_length=250)),
                ("warehouse_sn", models.CharField(max_length=250)),
                ("location", models.CharField(blank=True, null=True)),
                ("is_primary", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "INV_Warehouse",
                "ordering": ("-is_primary", "-id"),
            },
        ),
    ]
